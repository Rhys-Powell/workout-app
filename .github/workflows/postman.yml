name: Automated API tests using Newman CLI

on:
  push:
    branches:
      - test-branch
    paths:   
      - 'Workout.Api/**/*'

jobs:
  automated-api-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0.39 
        ports:
          - 3306:3306
        options: >-
            --health-cmd="mysqladmin ping --silent"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Build Docker image
        run: |
          docker build -f Workout.Api/Dockerfile -t workout-api:latest .

      - name: Run API container
        run: |
          docker run -d -p 8080:8080 \
            -e ASPNETCORE_ENVIRONMENT=Development \
            --name workout-api-container workout-api:latest

      - name: Wait for API to be ready
        run: |
          sleep 30  # Initial wait for 30 seconds
          for i in {1..6}; do  # Try up to 6 times (total 1 minute)
            echo "Attempt $((i))..."
            if curl -f http://localhost:8080/api/health; then
              echo "API is ready!"
              break
            else
              echo "API is not ready. Waiting for $((2**i)) seconds before retrying..."
              sleep $((2**i))  # Exponential backoff: 2^i seconds
            fi
          done

      - name: Check API readiness
        run: |
          # Final check to confirm API readiness
          if ! curl -f http://localhost:8080/api/health; then
            echo "API is still not ready after retries."
            exit 1  # Fail the job if the API is not ready
          fi

      - name: Install Newman
        run: npm install -g newman

      - name: Run Newman API tests
        run: >
          newman run postman/"Workout app - instructions in 'Overview' tab".postman_collection.json 
          --env-var "access_token_dev=${{ secrets.ACCESS_TOKEN_DEV }}"
          --environment postman/"Local development".postman_environment.json
          --global-var "base_url=http://localhost:8080"
        timeout-minutes: 10

      - name: Clean up
        run: |
          docker stop workout-api-container
          docker rm workout-api-container
